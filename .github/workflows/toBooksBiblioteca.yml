name: Actualizar Biblioteca

on:
  push:
    paths:
      - 'Libros/books.json'  # Detecta cambios en este archivo

jobs:
  update-library:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Leer y combinar la información de `books.json` con `biblioteca.json`, evitando duplicados
      - name: Actualizar biblioteca.json
        run: |
          # Definir las rutas de los archivos
          LIBROS_JSON="Libros/books.json"
          BIBLIOTECA_JSON="Biblioteca/biblioteca.json"

          # Verificar que ambos archivos existan
          if [ ! -f "$LIBROS_JSON" ]; then
            echo "El archivo $LIBROS_JSON no existe. Asegúrate de que esté presente en el repositorio."
            exit 1
          fi

          if [ ! -f "$BIBLIOTECA_JSON" ]; then
            echo "El archivo $BIBLIOTECA_JSON no existe. Se creará un archivo nuevo."
            echo '{"books": []}' > "$BIBLIOTECA_JSON"
          fi

          # Combinar la información y evitar duplicados
          jq -s 'reduce .[] as $item ([]; . + $item.books) | unique_by(.title, .author) | {books: .}' "$BIBLIOTECA_JSON" "$LIBROS_JSON" > temp.json

          # Mover el archivo combinado al archivo original
          mv temp.json "$BIBLIOTECA_JSON"

      # 3. Hacer commit y push de los cambios usando un token personal (PAT)
      - name: Commit y push de los cambios
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add Biblioteca/biblioteca.json
          git commit -m "Actualizar biblioteca.json con los datos de books.json, evitando duplicados" || echo "No hay cambios para commitear."
          git push https://x-access-token:${PAT}@github.com/${{ github.repository }}.git

