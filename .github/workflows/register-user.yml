name: Registrar Usuario

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Nombre del usuario'
        required: true
      surname:
        description: 'Apellidos del usuario'
        required: true
      birthdate:
        description: 'Fecha de nacimiento (DD/MM/AAAA)'
        required: true
      email:
        description: 'Correo electr√≥nico'
        required: true
      notifications:
        description: 'Aceptar notificaciones (S√≠/No)'
        required: true

jobs:
  register-user:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Crear la carpeta `Usuarios/[nombre_apellido]` si no existe
      - name: Crear carpeta personal para el usuario
        run: |
          user_dir="Usuarios/${{ github.event.inputs.name }}_${{ github.event.inputs.surname }}"
          mkdir -p "$user_dir"

      # 3. Guardar los datos del usuario en `Usuarios/users.json`
      - name: Guardar los datos del usuario en `users.json`
        run: |
          user_data=$(jq -n \
            --arg name "${{ github.event.inputs.name }}" \
            --arg surname "${{ github.event.inputs.surname }}" \
            --arg birthdate "${{ github.event.inputs.birthdate }}" \
            --arg email "${{ github.event.inputs.email }}" \
            --arg notifications "${{ github.event.inputs.notifications }}" \
            '{name: $name, surname: $surname, birthdate: $birthdate, email: $email, notifications: $notifications}')

          # Verificar si `users.json` ya existe, si es as√≠, agregar el nuevo usuario
          if [ -f Usuarios/users.json ]; then
            jq --argjson new_user "$user_data" '.users += [$new_user]' Usuarios/users.json > temp.json && mv temp.json Usuarios/users.json
          else
            # Si `users.json` no existe, crear uno nuevo
            echo '{"users":['"$user_data"']}' > Usuarios/users.json
          fi

      # 4. Crear o actualizar el `README.md` con la lista de usuarios
      - name: Crear o actualizar README.md
        run: |
          README="Usuarios/README.md"

          # Si el archivo README.md no existe, crearlo
          if [ ! -f "$README" ]; then
            echo "# üìö **Lista de Usuarios Registrados**" > $README
            echo "" >> $README
          fi

          # A√±adir el nuevo usuario al README.md
          echo "## ${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}" >> $README
          echo "- **Nombre completo**: ${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}" >> $README
          echo "- **Fecha de nacimiento**: ${{ github.event.inputs.birthdate }}" >> $README
          echo "- **Correo electr√≥nico**: ${{ github.event.inputs.email }}" >> $README
          echo "- **Notificaciones**: ${{ github.event.inputs.notifications }}" >> $README
          echo "" >> $README

      # 5. Crear un README.md creativo y divertido dentro de la carpeta personal del usuario
      - name: Crear README.md personal para el usuario
        run: |
          user_dir="Usuarios/${{ github.event.inputs.name }}_${{ github.event.inputs.surname }}"
          user_readme="$user_dir/README.md"

          # Crear un README con un mensaje creativo y divertido
          echo "# üéâ Bienvenido, ${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}!" > $user_readme
          echo "" >> $user_readme
          echo "¬°Hola, ${{ github.event.inputs.name }}! üòé" >> $user_readme
          echo "Te damos la bienvenida a tu espacio personal en **BookTrack**, tu lugar para organizar, compartir y explorar tus lecturas. üìö‚ú®" >> $user_readme
          echo "" >> $user_readme
          echo "## üìã **Tus Datos**" >> $user_readme
          echo "- **Nombre completo**: ${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}" >> $user_readme
          echo "- **Fecha de nacimiento**: ${{ github.event.inputs.birthdate }}" >> $user_readme
          echo "- **Correo electr√≥nico**: ${{ github.event.inputs.email }}" >> $user_readme
          echo "- **Notificaciones**: ${{ github.event.inputs.notifications }}" >> $user_readme
          echo "" >> $user_readme
          echo "## üöÄ **Pr√≥ximos pasos**" >> $user_readme
          echo "1. üåü **Personaliza tu perfil**: Agrega tus lecturas en la carpeta `Usuarios/`." >> $user_readme
          echo "2. üìñ **Explora clubes de lectura**: √önete y comparte tus libros favoritos." >> $user_readme
          echo "3. üéØ **Desaf√≠os grupales**: Participa en retos mensuales." >> $user_readme
          echo "" >> $user_readme
          echo "¬°Estamos muy emocionados de tenerte aqu√≠, ${{ github.event.inputs.name }}! Que tus lecturas sean infinitas y siempre encuentres tu pr√≥xima gran historia. üìñ‚ú®" >> $user_readme

      # 6. Hacer commit y push de los cambios
      - name: Commit y push de los cambios
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # A√±adir todos los archivos modificados
          git add Usuarios/users.json Usuarios/README.md "Usuarios/${{ github.event.inputs.name }}_${{ github.event.inputs.surname }}/README.md"

          # Generar el mensaje de commit din√°micamente
          commit_message="Nuevo usuario registrado: ${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}"
          git commit -m "$commit_message"

          # Realizar el push con el token de autenticaci√≥n
          git push
