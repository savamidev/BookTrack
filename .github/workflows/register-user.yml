name: Registrar Usuario

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Nombre del usuario'
        required: true
      surname:
        description: 'Apellidos del usuario'
        required: true
      birthdate:
        description: 'Fecha de nacimiento (DD/MM/AAAA)'
        required: true
      email:
        description: 'Correo electrónico'
        required: true
      notifications:
        description: 'Aceptar notificaciones (Sí/No)'
        required: true

jobs:
  register-user:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Instalar herramientas necesarias
      - name: Instalar jq
        run: sudo apt-get install -y jq

      # 3. Generar una ID corta y única (3 dígitos)
      - name: Generar ID corto
        id: generate-id
        run: |
          user_id=$(head /dev/urandom | tr -dc '0-9a-zA-Z' | head -c 3)
          echo "user_id=$user_id" >> $GITHUB_ENV

      # 4. Crear la carpeta personal para el usuario
      - name: Crear carpeta personal para el usuario
        run: |
          user_dir="Usuarios/${{ github.event.inputs.name }}_$user_id"
          user_dir=${user_dir// /_}  # Reemplazar espacios por guiones bajos
          mkdir -p "$user_dir"

      # 5. Guardar los datos del usuario en `Usuarios/users.json`
      - name: Guardar los datos del usuario en users.json
        run: |
          user_data=$(jq -n \
            --arg id "$user_id" \
            --arg name "${{ github.event.inputs.name }}" \
            --arg surname "${{ github.event.inputs.surname }}" \
            --arg birthdate "${{ github.event.inputs.birthdate }}" \
            --arg email "${{ github.event.inputs.email }}" \
            --arg notifications "${{ github.event.inputs.notifications }}" \
            '{id: $id, name: $name, surname: $surname, birthdate: $birthdate, email: $email, notifications: $notifications}')

          if [ -f Usuarios/users.json ]; then
            jq --argjson new_user "$user_data" '.users += [$new_user]' Usuarios/users.json > temp.json && mv temp.json Usuarios/users.json
          else
            echo '{"users":['"$user_data"']}' > Usuarios/users.json
          fi

      # 6. Crear README.md personalizado dentro de la carpeta del usuario
      - name: Crear README.md personal para el usuario
        run: |
          user_dir="Usuarios/${{ github.event.inputs.name }}_$user_id"
          user_dir=${user_dir// /_}
          user_readme="$user_dir/README.md"

          cat <<EOF > "$user_readme"
          # 🌟 Bienvenido a tu perfil, **${{ github.event.inputs.name }}**!
          ¡Felicidades! 🎉 Has creado tu perfil personal en nuestro sistema. Aquí puedes encontrar todos los detalles sobre ti mismo.

          ## 📝 **Tus Datos**
          - **Nombre completo**: **${{ github.event.inputs.name }} ${{ github.event.inputs.surname }}**
          - **ID único**: \`$user_id\`
          - **Fecha de nacimiento**: **${{ github.event.inputs.birthdate }}**
          - **Correo electrónico**: **${{ github.event.inputs.email }}**
          - **Notificaciones**: **${{ github.event.inputs.notifications }}**

          ## 🌱 **¿Qué puedes hacer ahora?**
          - Personaliza tu perfil agregando una biografía o tus intereses.
          - Conecta tu cuenta con otros servicios o aplicaciones.
          - Comparte tus logros o actividades.

          ## 💬 **Conéctate con la comunidad**
          Si tienes alguna pregunta o sugerencia, no dudes en contactarnos. ¡Estamos aquí para ayudarte!

          ## 📅 **Detalles importantes**
          - **Fecha de creación**: $(date)
          ---
          ### **¡Gracias por registrarte y bienvenido a bordo!** 🚀
          EOF

      # 7. Crear o actualizar README.md global
      - name: Crear o actualizar README.md global
        run: |
          README="Usuarios/README.md"

          if [ ! -f "$README" ]; then
            echo "# Base de Datos de Usuarios" > "$README"
            echo "Este archivo contiene información sobre todos los usuarios registrados." >> "$README"
            echo "---" >> "$README"
          fi

          echo "## ${user_id} - ${github.event.inputs.name} ${github.event.inputs.surname}" >> "$README"
          echo "- **ID**: $user_id" >> "$README"
          echo "- **Nombre**: ${github.event.inputs.name}" >> "$README"
          echo "- **Correo Electrónico**: ${github.event.inputs.email}" >> "$README"
          echo "---" >> "$README"

      # 8. Realizar commit y push de los cambios
      - name: Commit y push de los cambios
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add "Usuarios/users.json" "Usuarios/README.md" "Usuarios/${{ github.event.inputs.name }}_$user_id/README.md"

          if git diff --cached --quiet; then
            echo "No hay cambios para hacer commit."
          else
            commit_message="Nuevo usuario registrado: ${github.event.inputs.name} ${github.event.inputs.surname} (ID: $user_id)"
            git commit -m "$commit_message"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
