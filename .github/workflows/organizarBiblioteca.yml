name: Organizar Biblioteca por Tipo

on:
  push:
    paths:
      - 'Biblioteca/biblioteca.json' # Activa el flujo solo si este archivo se modifica

jobs:
  organize-library:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Leer y procesar biblioteca.json
      - name: Procesar biblioteca.json
        run: |
          # Definir ruta al archivo JSON
          BIBLIOTECA_JSON="Biblioteca/biblioteca.json"

          # Verificar que el archivo existe
          if [ ! -f "$BIBLIOTECA_JSON" ]; then
            echo "El archivo $BIBLIOTECA_JSON no existe. Deteniendo el flujo de trabajo."
            exit 1
          fi

          # Leer los tipos 칰nicos y procesar libros
          types=$(jq -r '.books[].type' "$BIBLIOTECA_JSON" | sort | uniq)
          for type in $types; do
            # Crear carpeta para cada tipo si no existe
            type_dir="Libros/$type"
            mkdir -p "$type_dir"

            # Ruta al README.md dentro de la carpeta
            readme="$type_dir/README.md"

            # Crear README.md si no existe
            if [ ! -f "$readme" ]; then
              echo "# 游닄 Libros de $type" > "$readme"
              echo "Bienvenido a la colecci칩n de libros de **$type**. Aqu칤 encontrar치s los libros clasificados por este g칠nero." >> "$readme"
              echo "---" >> "$readme"
              echo "" >> "$readme"
            fi

            # A침adir libros al README.md
            books=$(jq -c ".books[] | select(.type==\"$type\")" "$BIBLIOTECA_JSON")
            for book in $books; do
              title=$(echo "$book" | jq -r '.title')
              author=$(echo "$book" | jq -r '.author')
              status=$(echo "$book" | jq -r '.status')
              favorite=$(echo "$book" | jq -r '.favorite')

              # Verificar si el libro ya est치 en el README
              if ! grep -q "## $title" "$readme"; then
                echo "## $title" >> "$readme"
                echo "- **Autor**: $author" >> "$readme"
                echo "- **Estado**: $status" >> "$readme"
                echo "- **Favorito**: $favorite" >> "$readme"
                echo "" >> "$readme"
                echo "### Comentarios" >> "$readme"
                echo "> A침ade aqu칤 tus comentarios sobre este libro." >> "$readme"
                echo "---" >> "$readme"
                echo "" >> "$readme"
              fi
            done
          done

      # 3. Hacer commit y push de los cambios
      - name: Commit y push de los cambios
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Libros/
          git commit -m "Actualizar sistema de carpetas por tipo y README.md de libros"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
