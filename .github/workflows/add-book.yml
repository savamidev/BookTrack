name: Registrar Libro

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Título del libro'
        required: true
      author:
        description: 'Autor del libro'
        required: true
      genre:
        description: 'Género literario'
        required: true
      year:
        description: 'Año de publicación'
        required: true
      status:
        description: 'Estado del libro'
        required: true
        type: choice
        options:
          - Pendiente
          - En lectura
          - Acabado
      favorite:
        description: '¿Es uno de tus libros favoritos?'
        required: false
        type: boolean

jobs:
  add-book:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Registrar el libro en la categoría seleccionada
      - name: Registrar libro
        run: |
          # Seleccionar el archivo correspondiente según el estado
          case "${{ github.event.inputs.status }}" in
            Pendiente) file="Libros/pendientes.json" ;;
            "En lectura") file="Libros/en_lectura.json" ;;
            Acabado) file="Libros/acabados.json" ;;
            *) echo "Estado inválido: ${{ github.event.inputs.status }}" && exit 1 ;;
          esac

          # Crear el objeto del libro
          BOOK=$(jq -n \
            --arg title "${{ github.event.inputs.title }}" \
            --arg author "${{ github.event.inputs.author }}" \
            --arg genre "${{ github.event.inputs.genre }}" \
            --arg year "${{ github.event.inputs.year }}" \
            '{title: $title, author: $author, genre: $genre, year: $year}')

          # Añadir el libro a la categoría seleccionada
          EXISTING=$(cat $file)
          UPDATED=$(echo $EXISTING | jq --argjson book "$BOOK" '.books += [$book]')
          echo "$UPDATED" > $file

          # Si es favorito, añadirlo también a favoritos.json
          if [ "${{ github.event.inputs.favorite }}" == "true" ]; then
            FAVORITES=$(cat Libros/favoritos.json)
            UPDATED_FAVORITES=$(echo $FAVORITES | jq --argjson book "$BOOK" '.books += [$book]')
            echo "$UPDATED_FAVORITES" > Libros/favoritos.json
          fi

      # 3. Hacer commit y push de los cambios
      - name: Commit y push de los cambios
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Añadir los archivos modificados a la etapa de commit
          git add Libros/favoritos.json Libros/pendientes.json Libros/en_lectura.json Libros/acabados.json

          # Generar el mensaje de commit dinámicamente
          commit_message="Libro registrado: ${{ github.event.inputs.title }} (Estado: ${{ github.event.inputs.status }}, Favorito: ${{ github.event.inputs.favorite }})"
          git commit -m "$commit_message"

          # Realizar el push con el token de autenticación
          git push
