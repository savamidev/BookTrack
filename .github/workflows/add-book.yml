name: Registrar Libro

on:
  workflow_dispatch:
    inputs:
      book_title:
        description: '📚 Título del libro'
        required: true
      book_author:
        description: '✍️ Autor del libro'
        required: true
      book_status:
        description: '📖 Estado del libro'
        required: true
        type: choice
        options:
          - "Leyendo"
          - "Pendiente"
          - "Terminado"
      book_favorite:
        description: '❤️ ¿Es tu libro favorito?'
        required: true
        type: choice
        options:
          - "Si"
          - "No"
      book_type:
        description: '🔖 Tipo de libro (ej. Terror, Fantasía, etc.)'
        required: true
        type: choice
        options:
          - "Terror"
          - "Fantasía"
          - "Ciencia Ficción"
          - "Misterio"
          - "Aventura"
          - "Romántico"
      user_id:
        description: '🆔 Ingresa el ID del usuario'
        required: true

jobs:
  register-book:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Instalar jq
        run: sudo apt-get install -y jq

      - name: Leer usuarios de users.json
        id: read_users
        run: |
          USER=$(jq -r '.users[] | select(.id == "${{ github.event.inputs.user_id }}")' Usuarios/users.json)
          USER_NAME=$(echo "$USER" | jq -r '.name')
          USER_SURNAME=$(echo "$USER" | jq -r '.surname')
          echo "user_name=$USER_NAME" >> $GITHUB_ENV
          echo "user_surname=$USER_SURNAME" >> $GITHUB_ENV

      - name: Registrar el libro
        run: |
          book_data=$(jq -n \
            --arg title "${{ github.event.inputs.book_title }}" \
            --arg author "${{ github.event.inputs.book_author }}" \
            --arg status "${{ github.event.inputs.book_status }}" \
            --arg favorite "${{ github.event.inputs.book_favorite }}" \
            --arg book_type "${{ github.event.inputs.book_type }}" \
            --arg user_id "${{ github.event.inputs.user_id }}" \
            '{title: $title, author: $author, status: $status, favorite: $favorite, type: $book_type, user_id: $user_id}')

          case "${{ github.event.inputs.book_status }}" in
            Leyendo) target_file="Libros/en_lectura.json" ;;
            Pendiente) target_file="Libros/pendientes.json" ;;
            Terminado) target_file="Libros/acabados.json" ;;
            *) exit 1 ;;
          esac

          if [ -f "$target_file" ]; then
            jq --argjson new_book "$book_data" '.books += [$new_book]' "$target_file" > temp.json && mv temp.json "$target_file"
          else
            echo '{"books":['"$book_data"']}' > "$target_file"
          fi

      - name: Actualizar README.md del usuario
        run: |
          USER_DIR="Usuarios/${{ env.user_name }}_${{ github.event.inputs.user_id }}"
          USER_README="$USER_DIR/README.md"

          mkdir -p "$USER_DIR"

          if [ ! -f "$USER_README" ]; then
            echo "# 🌟 ¡Bienvenido al espacio literario de ${{ env.user_name }} ${{ env.user_surname }}!" > "$USER_README"
            echo "📬 **Correo**: _privacidad garantizada_ 😎" >> "$USER_README"
            echo "" >> "$USER_README"
          fi

          echo "## 📚 **Nuevo Libro Añadido: ${{ github.event.inputs.book_title }}**" >> "$USER_README"
          echo "- ✍️ **Autor**: ${{ github.event.inputs.book_author }}" >> "$USER_README"
          echo "- 📖 **Estado**: _${{ github.event.inputs.book_status }}_" >> "$USER_README"
          echo "- ❤️ **Favorito**: ${{ github.event.inputs.book_favorite }}" >> "$USER_README"
          echo "- 🔖 **Tipo**: _${{ github.event.inputs.book_type }}_" >> "$USER_README"
          echo "" >> "$USER_README"
          echo "---" >> "$USER_README"

      - name: Commit y push de los cambios
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "Usuarios/${{ env.user_name }}_${{ github.event.inputs.user_id }}/README.md"
          git commit -m "🎉 Nuevo libro registrado para ${{ env.user_name }} ${{ env.user_surname }}"
          git push
