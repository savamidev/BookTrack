name: Registrar Libro

on:
  workflow_dispatch:
    inputs:
      book_title:
        description: 'Título del libro'
        required: true
      book_author:
        description: 'Autor del libro'
        required: true
      book_status:
        description: 'Estado del libro'
        required: true
        type: choice
        options:
          - "Leyendo"
          - "Pendiente"
          - "Terminado"
      book_favorite:
        description: '¿Es tu libro favorito?'
        required: true
        type: choice
        options:
          - "Si"
          - "No"
      user_id:
        description: 'Selecciona el ID del usuario'
        required: true
        type: choice  # Este campo será el desplegable para seleccionar el ID del usuario

jobs:
  register-book:
    runs-on: ubuntu-latest

    steps:
      # 1. Descargar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      # 2. Leer los usuarios del archivo users.json y obtener sus IDs
      - name: Leer usuarios de users.json
        id: read_users
        run: |
          # Leer el archivo users.json y obtener las IDs de los usuarios registrados
          USERS=$(jq -r '.users[] | .id' Usuarios/users.json)
          echo "users=$USERS" >> $GITHUB_ENV

      # 3. Registrar el libro con la ID del usuario seleccionada
      - name: Registrar el libro con la ID del usuario
        run: |
          # Crear el objeto del libro con los datos proporcionados
          book_data=$(jq -n \
            --arg title "${{ github.event.inputs.book_title }}" \
            --arg author "${{ github.event.inputs.book_author }}" \
            --arg status "${{ github.event.inputs.book_status }}" \
            --arg favorite "${{ github.event.inputs.book_favorite }}" \
            --arg user_id "${{ github.event.inputs.user_id }}" \
            '{title: $title, author: $author, status: $status, favorite: $favorite, user_id: $user_id}')

          # Agregar el libro al archivo de libros
          if [ -f "Libros/books.json" ]; then
            jq --argjson new_book "$book_data" '.books += [$new_book]' Libros/books.json > temp.json && mv temp.json Libros/books.json
          else
            # Si no existe, crear el archivo books.json
            echo '{"books":['"$book_data"']}' > Libros/books.json
          fi

      # 4. Hacer commit y push de los cambios
      - name: Commit y push de los cambios
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Añadir los archivos modificados
          git add Libros/books.json

          # Commit con mensaje dinámico
          git commit -m "Registrar libro: ${{ github.event.inputs.book_title }} con ID de usuario ${{ github.event.inputs.user_id }}"

          # Push con el token de autenticación
          git push
